on:
  push:
    branches: [main]
    tags:
    - '*'
  pull_request:

name: CI

env:
  rust_version: 1.54.0
  rust_toolchain_components: clippy,rustfmt
  java_version: 11

jobs:
  repo-lint:
    name: Repo Lints
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.rust_version }}
        components: ${{ env.rust_toolchain_components }}
        default: true
    - run: cargo run -- check --all
      name: run checks
      working-directory: tools/sdk-lints
    - run: cargo run -- fix --all
      name: run fixes
      working-directory: tools/sdk-lints

  codegen-tests:
    name: Codegen Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test:
        - name: Kotlin Style
          run: ./gradlew ktlint
        - name: Client Unit Tests
          run: ./gradlew :codegen:test
        - name: SDK Unit Tests
          run: ./gradlew :aws:sdk-codegen:test
        - name: Server Unit Tests
          run: ./gradlew :codegen-server:test
        - name: Client Integration Tests
          run: ./gradlew :codegen-test:test
        - name: Server Integration Tests
          run: ./gradlew :codegen-server-test:test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      # Pinned to the commit hash of v1.3.0
    - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
      with:
        sharedKey: ${{ runner.os }}-${{ env.rust_version }}-${{ github.job }}
        target-dir: ./target
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.rust_version }}
        components: ${{ env.rust_toolchain_components }}
        default: true
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    - name: ${{ matrix.test.name }}
      run: ${{ matrix.test.run }}

  runtime-tests:
    name: Rust Runtime Tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        runtime: [., ./aws]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    # Pinned to the commit hash of v1.3.0
    - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
      with:
        sharedKey: ${{ runner.os }}-${{ env.rust_version }}-${{ github.job }}
        target-dir: ./target
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.rust_version }}
        components: ${{ env.rust_toolchain_components }}
        default: true
    - name: Format Check
      run: rustfmt --check --edition 2018 $(find -name '*.rs' -print | grep -v /target/)
      # windows doesn't support using --check like this
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: clippy check
      run: cargo clippy -- -D warnings
      working-directory: ${{ matrix.runtime }}/rust-runtime/
      # don't bother running Clippy twice, it will have the same results on Windows
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: run tests
      run: cargo test --all-features
      working-directory: ${{ matrix.runtime }}/rust-runtime/
    - name: generate docs
      run: cargo doc --no-deps --document-private-items --all-features
      working-directory: ${{ matrix.runtime }}/rust-runtime/
      env:
        RUSTDOCFLAGS: -D warnings
    - name: Additional per-crate checks
      run: ./tools/additional-per-crate-checks.sh ${{ matrix.runtime }}/rust-runtime/
