on:
  push:
    branches: [main]
    tags:
    - '*'
  pull_request:

name: CI

env:
  rust_version: 1.56.1
  rust_toolchain_components: clippy,rustfmt
  java_version: 11

jobs:
  # This job detects if the PR made changes to build tools. If it did, then it builds a new
  # build Docker image. Otherwise, it downloads a build image from Public ECR. In both cases,
  # it uploads the image as a build artifact for other jobs to download and use.
  acquire-build-image:
    name: Acquire build image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: smithy-rs
    - name: Acquire build image
      run: |
        ./smithy-rs/tools/ci-build/acquire-build-image --nothing-or-local-if-changed ${{ github.event.pull_request.base.sha }}
        if (docker inspect smithy-rs-build-image-original:latest &>/dev/null); then
          docker save -o smithy-rs-build-image smithy-rs-build-image-original:latest
          echo "::set-output name=image-in-artifacts::true"
        else
          echo "::set-output name=image-in-artifacts::false"
        fi
    - name: Upload build image
      uses: actions/upload-artifact@v3
      with:
        name: smithy-rs-build-image-original
        path: smithy-rs-build-image-original
        retention-days: 1

  tests:
    name: Tests
    needs: acquire-build-image
    runs-on: ubuntu-latest
    # To avoid repeating setup boilerplate, we have the actual test commands
    # in a matrix strategy. These commands get run in the steps after all the setup.
    strategy:
      fail-fast: false
      matrix:
        test:
        - name: Style checks and lints
          action: check-style-and-lints
        - name: BuildSrc Tests
          action: check-buildsrc-tests
        - name: Client Unit Tests
          action: check-client-codegen-unit-tests
        - name: SDK Unit Tests
          action: check-sdk-codegen-unit-tests
        - name: Server Unit Tests
          action: check-server-codegen-unit-tests
        - name: Client Integration Tests
          action: check-client-codegen-integration-tests
        - name: Server Integration Tests
          action: check-server-codegen-integration-tests
    steps:
    - uses: actions/checkout@v2
      with:
        path: smithy-rs
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          gradle/caches
          gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/caches/**/*', 'gradle/wrapper/**/*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    # Pinned to the commit hash of v1.3.0
    - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
      with:
        sharedKey: ${{ runner.os }}-${{ env.rust_version }}-${{ github.job }}
        target-dir: ./smithy-rs-target
    - name: Download build image
      uses: actions/download-artifact@v3
      with:
        name: smithy-rs-build-image-original
    - name: Prepare build image
      run: |
        if [[ "${{ jobs.acquire-build-image.outputs.image-in-artifacts }}" == "true" ]]; then
          docker load -i smithy-rs-build-image-original
        else
          ./smithy-rs/tools/ci-build/acquire-build-image --force-remote
        fi
        ./smithy-rs/tools/ci-build/create-local-build-image
    # This runs the commands from the matrix strategy
    - name: ${{ matrix.test.name }}
      run: ./smithy-rs/tools/ci-build/ci-action ${{ matrix.test.action }}

  rust-tests:
    name: Rust Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        runtime: [rust-runtime, aws/rust-runtime, tools/publisher]
        exclude:
        # Don't need to test the publisher tool on Windows
        - os: windows-latest
          runtime: tools/publisher
    env:
      # Disable incremental compilation to reduce disk space use
      CARGO_INCREMENTAL: 0
      RUSTDOCFLAGS: -D warnings
      RUSTFLAGS: -D warnings
    steps:
    - uses: actions/checkout@v2
    # Pinned to the commit hash of v1.3.0
    - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
      with:
        sharedKey: ${{ runner.os }}-${{ env.rust_version }}-${{ github.job }}
        target-dir: ./target
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.rust_version }}
        components: ${{ env.rust_toolchain_components }}
        default: true
    - name: Format Check
      run: rustfmt --check --edition 2018 $(find -name '*.rs' -print | grep -v /target/)
      # windows doesn't support using --check like this
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: clippy check
      run: cargo clippy --all-features -- -D warnings
      working-directory: ${{ matrix.runtime }}
      # don't bother running Clippy twice, it will have the same results on Windows
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: run tests
      run: cargo test --all-features
      working-directory: ${{ matrix.runtime }}
    - name: generate docs
      run: cargo doc --no-deps --document-private-items --all-features
      working-directory: ${{ matrix.runtime }}

  # Psuedo-job that depends on the rust-tests job so that we don't have to enter
  # the myriad of test matrix combinations into GitHub's protected branch rules
  require-rust-tests:
    needs: rust-tests
    # Run this job even if its dependency jobs fail
    if: always()
    runs-on: ubuntu-latest
    name: Rust Tests Matrix Success
    steps:
    - name: Verify jobs succeeded
      uses: re-actors/alls-green@3a2de129f0713010a71314c74e33c0e3ef90e696
      with:
        jobs: ${{ toJSON(needs) }}

  runtime-bundle:
    name: Produce smithy-rs runtime bundle
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      # Pinned to the commit hash of v1.3.0
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    - name: Produce bundle
      run: |
        ./gradlew rust-runtime:assemble
        tar cfvz smithy-rs-runtime.tar.gz -C rust-runtime/build smithy-rs
    - uses: actions/upload-artifact@v3
      name: Upload bundle
      with:
        name: smithy-rs-runtime-${{ github.sha }}
        path: smithy-rs-runtime.tar.gz
