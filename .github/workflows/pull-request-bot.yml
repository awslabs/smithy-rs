name: PR Bot
# This job will generate a codegen diff, upload it to S3, and link to it in a comment on the PR.
on:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize

# Allow one instance of this workflow per pull request, and cancel older runs when new changes are pushed
concurrency:
  group: pull-request-bot-yml-${{ github.ref }}
  cancel-in-progress: true

env:
  java_version: 11
  rust_version: 1.56.1
  rust_toolchain_components: clippy,rustfmt
  apt_dependencies: libssl-dev gnuplot jq

jobs:
  generate-diff:
    runs-on: ubuntu-latest
    name: Generate diff and upload to S3
    env:
      AWS_REGION: us-west-2
      S3_BUCKET_NAME: ${{ secrets.SMITHY_RS_PULL_REQUEST_CDN_S3_BUCKET_NAME }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    # JDK is needed to generate code
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    # Node is needed to run diff2html
    - name: Set up NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install diff2html-cli
      run: npm install -g diff2html-cli@5.1.11
    - name: Generate diff
      id: generate-diff
      run: |
        ./tools/codegen-diff-revisions.py . ${{ github.event.pull_request.base.sha }}
        echo "::set-output name=bot-message::$(cat tmp-codegen-diff/bot-message)"
    - uses: aws-actions/configure-aws-credentials@v1
      name: Acquire credentials for uploading to S3
      with:
        role-to-assume: ${{ secrets.SMITHY_RS_PULL_REQUEST_CDN_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: us-west-2
    - name: Upload diff to S3
      run: |
        if [[ -d tmp-codegen-diff/${{ github.event.pull_request.base.sha }} ]]; then
            aws s3 cp tmp-codegen-diff/${{ github.event.pull_request.base.sha }} \
                "s3://${S3_BUCKET_NAME}/codegen-diff/${{ github.event.pull_request.base.sha }}" --recursive
        fi
    - uses: actions/github-script@v5
      # NOTE: if comments on each commit become bothersome, add a check that github.event.pull_request.action == "opened"
      if: ${{ github.head_ref != null }}
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{ steps.generate-diff.outputs.bot-message }}'
          })

  generate-doc-preview:
    runs-on: ubuntu-latest
    name: Generate rustdoc preview and upload to S3
    env:
      AWS_REGION: us-west-2
      S3_BUCKET_NAME: ${{ secrets.SMITHY_RS_PULL_REQUEST_CDN_S3_BUCKET_NAME }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      # JDK is needed to generate code
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.rust_version }}
        default: true
    - name: Generate doc preview
      # Only generate three of the smallest services since the doc build can be very large. STS and SSO must be
      # included since aws-config depends on them. Transcribe Streaming and DynamoDB (paginators/waiters) were chosen
      # below to stay small while still representing most features. Combined, they are about ~20MB at time of writing.
      run: |
        ./gradlew -Paws.services=+sts,+sso,+transcribestreaming,+dynamodb :aws:sdk:assemble

        # Copy the Server runtime crate(s) in
        cp -r rust-runtime/aws-smithy-http-server aws/sdk/build/aws-sdk/sdk

        pushd aws/sdk/build/aws-sdk

        # Remove example crates from workspace
        sed -i '/examples/d' Cargo.toml

        # Add server runtime crates to the workspace
        sed -i 's/"sdk\/sts",/"sdk\/sts","sdk\/aws-smithy-http-server",/' Cargo.toml

        cargo doc --no-deps --all-features
        popd
        ./tools/generate-doc-preview-index.sh ${{ github.event.pull_request.base.sha }}
    - uses: aws-actions/configure-aws-credentials@v1
      name: Acquire credentials for uploading to S3
      with:
        role-to-assume: ${{ secrets.SMITHY_RS_PULL_REQUEST_CDN_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: us-west-2
    - name: Upload doc preview to S3
      run: |
        aws s3 cp target/doc "s3://${S3_BUCKET_NAME}/docs/${{ github.event.pull_request.head.sha }}" --recursive
    - uses: actions/github-script@v5
      # NOTE: if comments on each commit become bothersome, add a check that github.event.pull_request.action == "opened"
      if: ${{ github.head_ref != null }}
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'A [new doc preview](https://d2luzm2xt3nokh.cloudfront.net/docs/${{ github.event.pull_request.head.sha }}/index.html) is ready to view.'
          })

  generate-server-benchmark:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PR
      uses: actions/checkout@v3
      with:
        path: pull-request
    - name: Checkout origin/main
      uses: actions/checkout@v3
      with:
        repository: awslabs/smithy-rs
        path: origin-main
        ref: main
    - name: Checkout wrk
      uses: actions/checkout@v3
      with:
        repository: wg/wrk
        path: wrk-build
        ref: 4.2.0
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        # Pinned to the commit hash of v1.3.0
    - name: Rust Cache
      uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
      with:
        sharedKey: ${{ runner.os }}-${{ env.rust_version }}-${{ github.job }}
        target-dir: ./target
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.rust_version }}
        components: ${{ env.rust_toolchain_components }}
        default: true
    - name: Install benchmarks dependencies
      run: sudo apt-get update && sudo apt-get install -y ${{ env.apt_dependencies }}
      # Ubuntu 20.04 doesn't have wrk packaged, hence we need to build it ðŸ¤¦
      # This will go away as soon as GitHub supports Ubuntu 21.10.
    - name: Install wrk
      run: cd wrk-build && make -j8 wrk && sudo cp wrk /usr/local/bin
    - name: Run benchmark
      id: run-benchmark
      run: |
        mkdir -p ~/.wrk-api-bench
        # run the benchmark on origin/main
        pushd origin-main/rust-runtime/aws-smithy-http-server/examples
        make && RUN_BENCHMARKS=1 cargo test --release
        popd

        # run the benchmark on current ref
        pushd pull-request/rust-runtime/aws-smithy-http-server/examples
        make && RUN_BENCHMARKS=1 cargo test --release
        popd
        # Uncomment this for debugging purposes. It will print out the
        # content of all the benchmarks found in the cache + the last one
        # produced by the current run.
        # for x in ~/.wrk-api-bench/*; do echo "Benchmark $x content:"; jq . "$x"; echo; done

        # Ensure the output is available for the PR bot.
        echo "::set-output name=bot-message::$(cat /tmp/smithy_rs_benchmark_deviation.txt)"
    - name: Post deviation on PR
      uses: actions/github-script@v5
        # NOTE: if comments on each commit become bothersome, add a check that github.event.pull_request.action == "opened"
      if: ${{ github.head_ref != null }}
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{ steps.run-benchmark.outputs.bot-message }}'
          })
