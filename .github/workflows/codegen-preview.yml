name: codegen diff preview
# This job will generate a branch containing exclusively codegen output and push it to GitHub
# once the branch is deployed, it will comment on GitHub with a link where you can see the generated diff.
on:
  push:
    branches:
    # this is a load-bearing branch filter: if this isn't here, you may
    # end up generating diffs for __generated-* branches which would lead to infinite recursion...
    - main
  pull_request:
    types:
    - opened
    - reopened
    - closed
    - synchronize
env:
  java_version: 11
jobs:
  cleanup-branch:
    if: ${{ github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    name: cleanup generated code branch
    steps:
    - name: gen branch output
      run: echo "::set-output name=branchname::${GITHUB_HEAD_REF##*/}"
      id: branch_output
    - uses: actions/github-script@v5
      with:
        script: |
          console.log("deleteing the generated code branch");
          await github.rest.git.deleteRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "heads/__generated-${{ steps.branch_output.outputs.branchname }}"
          })

  push-generated-code:
    runs-on: ubuntu-latest
    name: Push generated code to a branch
    if: ${{ github.event.action != 'closed' }}
    steps:
    # this is not technically necessary because of the branch filter above, but better to check
    # twice that have an infinitely recursing PR job
    - name: Assert we aren't already on a generated branch
      run: |
        [[ ${GITHUB_HEAD_REF:-$GITHUB_REF} != "*__generated*" ]]
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Gradle Cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    - name: mk-generated
      run: ./tools/mk-generated.sh
    - name: push generated branch
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push -f origin "$(git rev-parse --abbrev-ref HEAD)"
    - name: finalize
      run: echo "generated output pushed to $(git rev-parse --abbrev-ref HEAD)"
    - name: gen branch output
      run: echo "::set-output name=branchname::$(git rev-parse --abbrev-ref HEAD)"
      id: branch_output
    - uses: actions/github-script@v5
      # NOTE: if comments on each commit become bothersome, add a check that github.event.pull_request.action == "opened"
      if: ${{ env.GITHUB_HEAD_REF }} != null
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `A new generated diff is ready to view: https://github.com/${context.repo.owner}/${context.repo.repo}/compare/__generated-main...${{ steps.branch_output.outputs.branchname }}`
          })
